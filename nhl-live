#!/usr/bin/env python3

import requests

colors = {
        "ANA": ["b5985a", "f95602", "a4a9ad", "111111"],
        "ARI": ["8c2633", "e2d6b5", "111111"],
        "BOS": ["fcb514", "000000"],
        "BUF": ["002654", "fcb514", "adafaa"],
        "CGY": ["ce1126", "f3bc52", "111111"],
        "CAR": ["cc0000", "000000", "a2a9af", "76232F", "333F48"],
        "CHI": ["ce1126", "000000", "ffd100", "ff6720", "001871", "cc8a00", "00843d"],
        "COL": ["6f263d", "236192", "a2aaad", "c1c6c8", "010101"],
        "CBJ": ["041e42", "c8102e", "a2aaad"],
        "DAL": ["006341", "010101", "a2aaad"],
        "DET": ["c8102e", "FFFFFF"],
        "EDM": ["fc4c02", "041e42"],
        "FLA": ["c8102e", "041e42", "b9975b"],
        "LAK": ["a2aaad", "111111", "572A84", "FFC80C", "FFFFFF"],
        "MIN": ["154734", "A6192E", "ddcba4", "eaaa00"],
        "MTL": ["a6192e", "001e62"],
        "NSH": ["ffb81c", "041e42"],

        "NJD": ["CE1126", "000000", "FFFFFF"],
        "NYI": ["00539B", "F47D30"],
        "NYR": ["0038A8", "CE1126", "FFFFFF"],
        "PHI": ["F74902", "000000", "FFFFFF"],
        "PIT": ["FCB514", "CFC493", "000000", "FFFFFF"],
        "OTT": ["DA1A32", "B79257", "000000"],
        "TOR": ["00205B", "FFFFFF"],
        "TBL": ["002868", "FFFFFF"],
        "WSH": ["C8102E", "041E42", "FFFFFF"],
        "STL": ["002F87", "FCB514", "041E42", "FFFFFF"],
        "VAN": ["00205B", "00843D", "041C2C", "99999A", "FFFFFF"],
        "SJS": ["006D75", "EA7200", "000000", "FFFFFF"],
        "WPG": ["041E42", "004C97", "AC162C", "7B303E", "55565A", "8E9090"],
        "VGK": ["B4975A", "333F42", "C8102E", "000000"],
        "SEA": ["68A2B9", "355464", "99D9D9", "001628", "E9072B"],
}

import truecolor

def contrast(bg):
    total = sum(bg)
    if total >= 450:
        return (0, 0, 0)
    return (255, 255, 255)

def team_clr(abr, n):
    if len(colors[abr]) <= n:
        return truecolor.hex_to_rgb(colors[abr][0])
    return truecolor.hex_to_rgb(colors[abr][n])

def team_color(abr):
    return truecolor.hex_to_rgb(colors[abr][0])

def team_acolor(abr):
    return truecolor.hex_to_rgb(colors[abr][1])

def team_ecolor(abr):
    if len(colors[abr]) > 2:
        return truecolor.hex_to_rgb(colors[abr][2])
    return truecolor.hex_to_rgb(colors[abr][0])

def get_team_name(abr):
    c = team_color(abr)
    return truecolor.color_text(" " + abr + " ", contrast(c), c)

def get_team_extra(abr, text):
    c = team_ecolor(abr)
    return truecolor.color_text(text, contrast(c), c)


def get_team_score(abr, score):
    str_score = " %2d " % (score)
    c = team_acolor(abr)
    return truecolor.color_text(str_score, contrast(c), c)

def get_separator(away_abr, home_abr):
    return truecolor.color_text("", team_acolor(home_abr), team_acolor(away_abr))

def get_score_separator(abr, away):
    if away:
        return truecolor.color_text("", team_acolor(abr), team_color(abr))
    else:
        return truecolor.color_text("", team_color(abr), team_acolor(abr))

def fmt(team, score, home):
    c_main = team_clr(team, 0)
    c_score = team_clr(team, 1)
    c_acc = team_clr(team, 2)
    p_team = truecolor.color_text(f"  {team}  ", contrast(c_main), c_main)
    p_score = truecolor.color_text(" %2d  " % score, contrast(c_score), c_score)
    if home:
        p_sep = truecolor.color_text("", c_main, c_score)
        p_sep1 = truecolor.color_text(" ", c_score, c_acc)
        p_sep1 = truecolor.color_text("", c_score, c_acc)
        p_badge = truecolor.fore_text("", c_acc)
        p_badge = truecolor.fore_text("", c_acc)
        return p_badge + p_sep1 + p_score + p_sep + p_team
    else:
        p_sep = truecolor.color_text("", c_score, c_main)
        p_sep1 = truecolor.color_text(" ", c_score, c_acc)
        p_sep1 = truecolor.color_text("", c_score, c_acc)
        p_badge = truecolor.fore_text("", c_acc)
        p_badge = truecolor.fore_text("", c_acc)
        return p_team + p_sep + p_score + p_sep1 + p_badge

live = requests.get('https://statsapi.web.nhl.com/api/v1/schedule')
teams = requests.get('https://statsapi.web.nhl.com/api/v1/teams')
if live.status_code == 200 and teams.status_code == 200:
    l = live.json()
    t = teams.json()
    teams_map = {}
    for ti in t["teams"]:
        teams_map[str(ti["id"])] = ti
    for d in l['dates']:
        for g in d["games"]:
            pk = g["gamePk"]
            link = g["link"]
            status = g["status"]["detailedState"]
            home = g["teams"]["home"]
            home_abr = teams_map[str(home["team"]["id"])]["abbreviation"]
            away = g["teams"]["away"]
            away_abr = teams_map[str(away["team"]["id"])]["abbreviation"]
            line = fmt(away_abr, away["score"], False) + " : " + fmt(home_abr, home["score"], True) + " " + status
            line1 = "%15s: %s%s%s%s%s%s%s%s%s" % (
                    status,
                    get_team_name(away_abr),
                    get_score_separator(away_abr, True),
                    get_team_score(away_abr, away['score']),
                    get_team_extra(away_abr, "  "),
                    " : ", #get_separator(away_abr, home_abr),
                    get_team_extra(home_abr, "  "),
                    get_team_score(home_abr, home['score']),
                    get_score_separator(home_abr, False),
                    get_team_name(home_abr)
                    )
            print(line)

if __name__ == "__main__":
    import sys
    if len(sys.argv) > 1:
            print(fmt(sys.argv[1], 3, False) + " : " + fmt(sys.argv[1], 1, True) + " In Progress")


#
